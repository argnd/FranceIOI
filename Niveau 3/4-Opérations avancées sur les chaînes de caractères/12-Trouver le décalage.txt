import algorea.Scanner;
import java.util.*;
import java.lang.*;

class Main {
   
  public static Scanner entree = new Scanner(System.in);
  
  public static final String MSG = entree.nextLine();
  public static final char FRLTR = 'e';
  
  public static void main(String[] args) {
     for (int i = 0; i< 27; i++){
        if (LettreLaPlusFrequente(Decypher(MSG,i))==FRLTR)
        { 
        System.out.println(Decypher(MSG,i));
        //break;  
        return; 
        }   
     }
    System.out.println(MSG);
 } 
 public static String Decypher(String s, int key) {
     StringBuffer sb = new StringBuffer();
     for (int i = 0; i< s.length(); i++){
        sb.append(Permutation(s.charAt(i), key));
     }
  return sb.toString();
  }
  
  public static char Permutation(char c, int key) {
  int shiftedkeyval;
  char permuted='z';
     if (Character.isUpperCase(c)){
       shiftedkeyval = ((c - 'A' + key) % 26 + 26) % 26;
       permuted = (char) (shiftedkeyval+(int)'A');  
     }else if(Character.isLowerCase(c)){
       shiftedkeyval = ((c - 'a' + key) % 26 + 26) % 26;
       permuted = (char) (shiftedkeyval+(int)'a');
     } else {
        permuted = c;
     }
  return permuted;
  }
  
  
  public static char LettreLaPlusFrequente(String s) {
     int[] lettres = new int[26];
     String tmp = s.toLowerCase();
     
     for(int i = 0; i < s.length(); i++){
        if(Character.isLowerCase(tmp.charAt(i))){
           lettres[(int) tmp.charAt(i)-'a']+= 1;
        }  
     }
  return (char) (getIndexOfLargest(lettres)+(int)'a');
  }
  
  public static int getIndexOfLargest( int[] array )
{
  if ( array == null || array.length == 0 ) return -1; // null or empty

  int largest = 0;
  for ( int i = 1; i < array.length; i++ )
  {
      if ( array[i] > array[largest] ) largest = i;
  }
  return largest; // position of the first largest found
}
}