import algorea.Scanner;
import static java.lang.Math.*;
import java.util.*;
import java.lang.*;
class Main {
 public static Scanner entree = new Scanner(System.in);
 public static final int NB= entree.nextInt(); //NB orders
 
 public static void main(String[] args) {
    
    
    List<int[]> stock = new ArrayList<int[]>();
    
    for (int i = 0; i < NB; i++){ // for each order
      int tmp = entree.nextInt(); //get qty
      if (tmp > 0){ // if qty > 0 then buy routine
         int tmp2 =entree.nextInt(); //get expdate
         stock.add(new int[]{tmp,tmp2}); //push element to list
      } else if (tmp < 0){  //if < 0 then sell routine
         RemoveFromStock(stock,tmp); //removefrom stock tmp element
         tmp = entree.nextInt(); //discard the extra 0
      }
    }
     

      System.out.println(Smallest(stock));

    
 } //main 
 
 public static void RemoveFromStock(List<int[]> l, int qt){
   int tmp = -qt; // number of element to remove
   int count = 0; //Number of stock where qty == 0 at the end of the list
   
   do {
       if (l.get(l.size()-1-count)[0]>0){ //if last element of list have stock in it 
          l.set(l.size()-1-count,new int[]{l.get(l.size()-1-count)[0]-1,l.get(l.size()-1-count)[1]}); // set this element to qty -1 & expdate stay the same 
          tmp--; // one element less to test
          if (l.get(l.size()-1-count)[0]==0) count++; // if last element of list has no qty left go to previous element to remove the remaining qty
       } else if (l.get(l.size()-1-count)[0]==0){
          count++;// if last element of list has no qty left go to previous element to remove the remaining qty
       }
   } while (tmp >0);
 }
 public static int Smallest(List<int[]> l){
    int min = 999999999; // higher than any 8 digit date
    int cmpteur = 0;
    for (int i = 0; i < l.size(); i++){
        if (min > l.get(i)[1] && l.get(i)[0] !=0){
         min = l.get(i)[1];
        }
        if(l.get(i)[0] ==0){
          cmpteur ++;
          if (cmpteur ==l.size()-1){
             return l.get(l.size()-1)[1];
          }
        }
    }
  return min;
 }
} // class
